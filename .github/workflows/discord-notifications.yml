name: Discord Notification

# 1. 알림을 받을 이벤트를 on 섹션에 모두 나열합니다.
on:
  push:
    branches:
      - main
      - master
  pull_request:
    types: [opened, closed]
  issues:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      # 2. 이벤트 종류(github.event_name)에 따라 다른 스텝이 실행되도록 if 조건문을 사용합니다.
      
      # Push 이벤트 처리
      - name: Send Push Notification
        if: github.event_name == 'push'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          COMMIT_MESSAGE=$(echo "${{ github.event.head_commit.message }}" | sed 's/"/\\"/g' | sed "s/'/\\'/g")
          JSON_PAYLOAD=$(printf '{"embeds": [{"title": "[Push] New commits to ${{ github.repository }}", "description": "`%s`", "url": "${{ github.event.head_commit.url }}", "color": 3066993, "author": {"name": "${{ github.actor }}"}}]}' "$COMMIT_MESSAGE")
          curl -s -X POST -H "Content-Type: application/json" --data "${JSON_PAYLOAD}" "$DISCORD_WEBHOOK_URL"
          
      # Pull Request 이벤트 처리
      - name: Send Pull Request Notification
        if: github.event_name == 'pull_request'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          PR_TITLE=$(echo "${{ github.event.pull_request.title }}" | sed 's/"/\\"/g' | sed "s/'/\\'/g")
          PR_ACTION="${{ github.event.action }}"
          JSON_PAYLOAD=$(printf '{"embeds": [{"title": "[PR %s] %s", "url": "${{ github.event.pull_request.html_url }}", "color": 10181046, "author": {"name": "${{ github.event.pull_request.user.login }}"}}]}' "$PR_ACTION" "$PR_TITLE")
          curl -s -X POST -H "Content-Type: application/json" --data "${JSON_PAYLOAD}" "$DISCORD_WEBHOOK_URL"

      # Issues 이벤트 처리
      - name: Send Issue Notification
        if: github.event_name == 'issues'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          ISSUE_TITLE=$(echo "${{ github.event.issue.title }}" | sed 's/"/\\"/g' | sed "s/'/\\'/g")
          JSON_PAYLOAD=$(printf '{"embeds": [{"title": "[Issue Opened] %s", "url": "${{ github.event.issue.html_url }}", "color": 16753920, "author": {"name": "${{ github.event.issue.user.login }}"}}]}' "$ISSUE_TITLE")
          curl -s -X POST -H "Content-Type: application/json" --data "${JSON_PAYLOAD}" "$DISCORD_WEBHOOK_URL"
          
      # Issue Comment 이벤트 처리
      - name: Send Issue Comment Notification
        if: github.event_name == 'issue_comment'
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          COMMENT_BODY=$(echo "${{ github.event.comment.body }}" | head -c 1000)
          JSON_PAYLOAD=$(printf '{"embeds": [{"title": "[New Comment] on Issue #${{ github.event.issue.number }}", "description": "%s", "url": "${{ github.event.comment.html_url }}", "color": 9936031, "author": {"name": "${{ github.event.comment.user.login }}"}}]}' "$COMMENT_BODY")
          curl -s -X POST -H "Content-Type: application/json" --data "${JSON_PAYLOAD}" "$DISCORD_WEBHOOK_URL"
